#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  s87copy
#  
#  Copyright 2012 Silvano <Silvano@XFX650IULTRA>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  
import sys, os, time, gzip


def progressBar(title, width, percent, footer=''):
    progressChar = chr(219) #progressChar = '='
    onePercentIs = 1.0*(width-2)/100
    if not percent == 100:
        lineToWrite = ''.join((chr(13), title, '[',(progressChar*int(percent*onePercentIs)),'>'))
    else:
        lineToWrite = ''.join((chr(13), title, '[',(progressChar*int(percent*onePercentIs))))
    percentString = ''.join((str(percent),'%')).rjust(4,' ')
    lineToWrite = ''.join((lineToWrite.ljust(width+len(title), ' '),'] ',percentString,footer))
    sys.stdout.write(lineToWrite)
    sys.stdout.flush()

compress = False
if '-z' in sys.argv:
    compress = True
    sys.argv = sys.argv[:-1]

move = False
if '-m' in sys.argv:
    move = True
    sys.argv = sys.argv[:-1]

if len(sys.argv) < 3:
    print 'syntax Error'
    sys.exit(1)
else:
    sourcePaths = sys.argv[1:-1]    
    for sourcePath in sourcePaths:
        sourcePath = os.path.abspath(sourcePath)
        sourceFileName = os.path.split(sourcePath)[1]
        destinationPath = os.path.abspath(sys.argv[-1])
        
        if os.path.isdir(destinationPath):
            destinationPath = os.path.join(destinationPath, sourceFileName)

        fileSize = os.path.getsize(sourcePath)
        countBlocks = (fileSize / 65535) + 1
        source = open(sourcePath, 'rb')
        if compress:
            destination = gzip.open(destinationPath+'.gzip', 'wb')
        else:
            destination = open(destinationPath, 'wb')
        
        mibPerSeconds = []
        footer = ''
        for ID in xrange(0, countBlocks):
            blockStartTime = time.time()
            percent = int((100.0/countBlocks)*(ID+1))
            progressBar('Copying:', 50, percent, ' '.join((' ', footer, ' - ', sourceFileName)))            
            block = source.read(65535)
            destination.write(block)
            duration = (time.time()-blockStartTime)
            mibPerSeconds.append((65535/duration)/1024/1024)
            avgMibPerSeconds = "%.2f" % (sum(mibPerSeconds)/len(mibPerSeconds))
            footer = ''.join((avgMibPerSeconds.rjust(6,' ').replace('.',','),' MB/s'))
        source.close()
        destination.flush()
        destination.close()
        if move:
            os.remove(sourcePath)
        sys.stdout.write(chr(7) + chr(10))
    
   
sys.exit(0)

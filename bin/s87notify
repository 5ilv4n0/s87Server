#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  s87notify
#  
#  Copyright 2012 Silvano Wegener <silvano@DV8000>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
# 
import os, sys, json, time, re
sys.path.append('/opt/s87/bin/lib')
sys.path.append('/opt/s87/config')
from events import *
import log
import system
import basic
import mail


PROCESSNAME	= os.path.split(sys.argv[0])[1]
config		= basic.configReader.readConfig('/opt/s87/config/s87notify.conf')
logging		= log.LogFile(PROCESSNAME, '/tmp/' + PROCESSNAME + '.log', config['logLevel'])
logging.info(PROCESSNAME + ' start...')

def email(subject, message):
    mail.mailServer.addMail(mail.config['smtpConfig']['smtpUser'], mail.config['smtpConfig']['smtpUser'], subject, message)
    logging.debug('send mail: '+ subject)




events = basic.loadEvents(PROCESSNAME, '/opt/s87/config/s87notify.events',locals(), email)

logging.info(PROCESSNAME + ' is running.')
try:
    while True:
        for event in events:
            event.run()
        try:
            mail.mailServer.send()
        except:
            logging.critical('Login data invalid.')
            sys.exit(1)
        time.sleep(2)
except KeyboardInterrupt:
    logging.info(PROCESSNAME + ' stopped by user.')
    sys.exit()

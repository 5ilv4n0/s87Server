#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  s87ntpd
#  
#  Copyright 2012 Silvano Wegener <silvano@DV8000>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  
import os, time, sys, json
sys.path.append('/opt/s87/bin/lib')
import log
PROCESSNAME = os.path.split(sys.argv[0])[1]

def readConfig(jsonFilePath):
    with open(jsonFilePath,'r') as f:
        config = json.load(f)
    return config

config = readConfig('/opt/s87/config/s87ntpd.conf')

if os.path.isfile('/opt/s87/DEBUG'):
    config['logLevel'] = 99
logging = log.LogFile(PROCESSNAME, '/tmp/' + PROCESSNAME + '.log', config['logLevel'])


def syncTime(server):
    out = os.popen('ntpdate -u ' + server + ' 2>&1').read()
    if 'no server suitable' in out:
        logging.warning(server + ' not available!')
        return False
    logging.info('timesync successfully. '+ out.replace(os.linesep, ''))
    return True


def setHWClock():
    os.popen('hwclock --systohc')
    return True



logging.info('starting...')
try:
    while True:
        for server in config['ntpServers']:
            logging.info('try ntp server ' + server)
            r = syncTime(server)
            if r == True:
                logging.info('sync hwclock.')
                setHWClock()
                logging.info('wait 3600s.')
                time.sleep(3600)
                break
        logging.info('wait 10s.')
        time.sleep(10)
except KeyboardInterrupt:
    print 'exit.'


